name: Gradle Enterprise experiments
on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      gradlew_flags: ${{ steps.global-constants.outputs.gradlew_flags }}
      checkout_ref: ${{ steps.checkout-args.outputs.ref }}
      checkout_repo: ${{ steps.checkout-args.outputs.repository }}
    steps:
      - name: "Setup global constants"
        id: global-constants
        run: |
          set -x
          GRADLEW_FLAGS="-Dorg.gradle.internal.http.connectionTimeout=60000 \
            -Dorg.gradle.internal.http.socketTimeout=60000                  \
            -Dorg.gradle.internal.repository.max.retries=20                 \
            -Dorg.gradle.internal.repository.initial.backoff=500            \
            -Dorg.gradle.jvmargs=-XX:MaxMetaspaceSize=1024m                 \
            -Dgradle.cache.remote.enabled=false                             \
            --no-configuration-cache                                       \
            --stacktrace"
          echo "::set-output name=gradlew_flags::$GRADLEW_FLAGS"
      - name: "Compute actions/checkout arguments"
        id: checkout-args
        run: |
          set -x

          REF=${{ github.event.pull_request.head.ref }}
          if [ -z "$REF" ]; then
            REF=${{ github.event.ref }}
          fi
          echo "::set-output name=ref::$REF"

          REPOSITORY=${{ github.event.pull_request.head.repo.full_name }}
          if [ -z "$REPOSITORY" ]; then
            REPOSITORY=${{ github.repository }}
          fi
          echo "::set-output name=repository::$REPOSITORY"

  warm-up:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      GRADLE_BUILD_CACHE_PASSWORD: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    outputs:
      status: ${{ steps.output-status.outputs.status }}
      affectedFileArgs: ${{ steps.affected-file-args.outputs.files }}
    steps:
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV

      - name: "Checkout androidx repo"
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.checkout_ref }}
          repository: ${{ needs.setup.outputs.checkout_repo }}
          fetch-depth: 1

      - name: "warm up gradle"
        id: warm-up-gradle-cache
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: tasks -PandroidXUnusedParameter=activity # add project name to cache key
          build-root-directory: activity
          configuration-cache-enabled: true
          dependencies-cache-enabled: true
          dependencies-cache-key: |
            **/libs.versions.toml
          dependencies-cache-exact: false
          distributions-cache-enabled: true

  run-experiment-1:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        project: ["activity", "biometric", "compose-runtime", "datastore", "fragment", "lifecycle", "navigation", "paging", "room", "work"]
        include:
          - project: "compose-runtime"
            project-root: "compose/runtime"
    runs-on: ${{ matrix.os }}
    needs: [setup, warm-up]
    env:
      artifact-id: ${{matrix.project}}
      project-root: ${{matrix.project-root || matrix.project}}
      GRADLE_BUILD_CACHE_PASSWORD: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    steps:
      - name: "Checkout androidx repo"
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.checkout_ref }}
          repository: ${{ needs.setup.outputs.checkout_repo }}
          fetch-depth: 1
      - name: "Setup JDK 8 for tools.jar"
        id: setup-java8
        uses: actions/setup-java@v1
        with:
          java-version: "8"
      - name: "set tools jar path"
        id: setup-tools-jar
        run: |
          set -x
          TOOLS_JAR=$JAVA_HOME/lib/tools.jar
          echo "::set-output name=toolsJar::$TOOLS_JAR"
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
      # gradle action loads the dependencies cache only on the first run based on arguments.
      # to control it, we explicitly invoke it once which makes it load the dependencies cache with the parameters
      # we control
      - name: "warm up gradle"
        id: warm-up-gradle-cache
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: tasks -PandroidXUnusedParameter=${{ env.project-root }} # add project name to cache key
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: true
          dependencies-cache-enabled: true
          dependencies-cache-key: |
            **/libs.versions.toml
          dependencies-cache-exact: false
          distributions-cache-enabled: true
      - name: "./gradlew clean buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: clean buildOnServer --no-build-cache -Dscan.tag.exp1 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false
      - name: "./gradlew buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: buildOnServer --no-build-cache -Dscan.tag.exp1 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false

  run-experiment-2:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        project: ["activity", "biometric", "compose-runtime", "datastore", "fragment", "lifecycle", "navigation", "paging", "room", "work"]
        include:
          - project: "compose-runtime"
            project-root: "compose/runtime"
    runs-on: ${{ matrix.os }}
    needs: [setup, warm-up]
    env:
      artifact-id: ${{matrix.project}}
      project-root: ${{matrix.project-root || matrix.project}}
      GRADLE_BUILD_CACHE_PASSWORD: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    steps:
      - name: "Checkout androidx repo"
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.checkout_ref }}
          repository: ${{ needs.setup.outputs.checkout_repo }}
          fetch-depth: 1
      - name: "Setup JDK 8 for tools.jar"
        id: setup-java8
        uses: actions/setup-java@v1
        with:
          java-version: "8"
      - name: "set tools jar path"
        id: setup-tools-jar
        run: |
          set -x
          TOOLS_JAR=$JAVA_HOME/lib/tools.jar
          echo "::set-output name=toolsJar::$TOOLS_JAR"
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
      # gradle action loads the dependencies cache only on the first run based on arguments.
      # to control it, we explicitly invoke it once which makes it load the dependencies cache with the parameters
      # we control
      - name: "warm up gradle"
        id: warm-up-gradle-cache
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: tasks -PandroidXUnusedParameter=${{ env.project-root }} # add project name to cache key
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: true
          dependencies-cache-enabled: true
          dependencies-cache-key: |
            **/libs.versions.toml
          dependencies-cache-exact: false
          distributions-cache-enabled: true
      - name: "first clean buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: clean buildOnServer -Dscan.tag.exp2 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false
      - name: "second clean buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: clean buildOnServer -Dscan.tag.exp2 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: ${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false

  run-experiment-3:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        project: ["activity", "biometric", "compose-runtime", "datastore", "fragment", "lifecycle", "navigation", "paging", "room", "work"]
        include:
          - project: "compose-runtime"
            project-root: "compose/runtime"
    runs-on: ${{ matrix.os }}
    needs: [setup, warm-up]
    env:
      artifact-id: ${{matrix.project}}
      project-root: ${{matrix.project-root || matrix.project}}
      GRADLE_BUILD_CACHE_PASSWORD: ${{ secrets.GRADLE_BUILD_CACHE_PASSWORD }}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    steps:
      - name: "Checkout androidx repo 1"
        uses: actions/checkout@v2
        with:
          path: checkout-1
          ref: ${{ needs.setup.outputs.checkout_ref }}
          repository: ${{ needs.setup.outputs.checkout_repo }}
          fetch-depth: 1
      - name: "Checkout androidx repo 2"
        uses: actions/checkout@v2
        with:
          path: checkout-2
          ref: ${{ needs.setup.outputs.checkout_ref }}
          repository: ${{ needs.setup.outputs.checkout_repo }}
          fetch-depth: 1
      - name: "Setup JDK 8 for tools.jar"
        id: setup-java8
        uses: actions/setup-java@v1
        with:
          java-version: "8"
      - name: "set tools jar path"
        id: setup-tools-jar
        run: |
          set -x
          TOOLS_JAR=$JAVA_HOME/lib/tools.jar
          echo "::set-output name=toolsJar::$TOOLS_JAR"
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: "Set environment variables"
        shell: bash
        run: |
          set -x
          echo "ANDROID_SDK_ROOT=$HOME/Library/Android/sdk" >> $GITHUB_ENV
      # gradle action loads the dependencies cache only on the first run based on arguments.
      # to control it, we explicitly invoke it once which makes it load the dependencies cache with the parameters
      # we control
      - name: "warm up gradle"
        id: warm-up-gradle-cache
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: tasks -PandroidXUnusedParameter=${{ env.project-root }} # add project name to cache key
          build-root-directory: checkout-1/${{ env.project-root }}
          configuration-cache-enabled: true
          dependencies-cache-enabled: true
          dependencies-cache-key: |
            **/libs.versions.toml
          dependencies-cache-exact: false
          distributions-cache-enabled: true
      - name: "checkout-1 clean buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: clean buildOnServer -Dscan.tag.exp3 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: checkout-1/${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false
      - name: "checkout-2 clean buildOnServer"
        uses: gradle/gradle-command-action@v1
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        with:
          arguments: clean buildOnServer -Dscan.tag.exp3 ${{ needs.setup.outputs.gradlew_flags }}
          build-root-directory: checkout-2/${{ env.project-root }}
          configuration-cache-enabled: false
          dependencies-cache-enabled: false
          distributions-cache-enabled: false
