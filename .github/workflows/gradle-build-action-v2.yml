name: Build with gradle-build-action
on:
  push:
  pull_request:

env:
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Publish build scans link
        run: echo "::notice ::https://ge.androidx.dev/scans?search.names=CI%20run&search.values=$GITHUB_RUN_ID"

  playground-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        project: ["biometric", "datastore", "work"]
        # project: ["activity", "biometric", "compose-runtime", "datastore", "fragment", "lifecycle", "navigation", "paging", "room", "work"]
        # include:
        #   - project: "compose-runtime"
        #     project-root: "compose/runtime"
    runs-on: ${{ matrix.os }}
    needs: [setup]
    env:
      artifact-id: ${{matrix.project}}
      project-root: ${{matrix.project-root || matrix.project}}
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    steps:
      - name: "Checkout androidx repo"
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: "Setup JDK 8 for tools.jar"
        id: setup-java8
        uses: actions/setup-java@v1
        with:
          java-version: "8"
      - name: "set tools jar path"
        id: setup-tools-jar
        run: |
          set -x
          TOOLS_JAR=$JAVA_HOME/lib/tools.jar
          echo "::set-output name=toolsJar::$TOOLS_JAR"
      - name: "Setup JDK 11"
        id: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: "Setup Gradle"
        uses: gradle/gradle-build-action@strict-cache-match
        with:
          gradle-home-cache-strict-match: true

      - name: "./gradlew clean buildOnServer"
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
          JAVA_TOOLS_JAR: ${{ steps.setup-tools-jar.outputs.toolsJar }}
        working-directory: ${{ env.project-root }}
        run: ./gradlew clean buildOnServer --no-configuration-cache

